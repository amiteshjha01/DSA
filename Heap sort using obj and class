#include <iostream>
using namespace std;

class HeapSort {
private:
    int* arr;
    int size;

    void heapify(int arr[], int n, int i) {
        int largest = i;
        int left = 2 * i + 1;
        int right = 2 * i + 2;

        if (left < n && arr[left] > arr[largest])
            largest = left;

        if (right < n && arr[right] > arr[largest])
            largest = right;

        if (largest != i) {
            swap(arr[i], arr[largest]);
            heapify(arr, n, largest);
        }
    }

public:
    HeapSort(int input[], int n) {
        size = n;
        arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = input[i];
        }
    }

    void sort() {
        for (int i = size / 2 - 1; i >= 0; i--) {
            heapify(arr, size, i);
        }

        for (int i = size - 1; i >= 0; i--) {
            swap(arr[0], arr[i]);
            heapify(arr, i, 0);
        }
    }

    void display() {
        for (int i = 0; i < size; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }

    ~HeapSort() {
        delete[] arr;
    }
};

int main() {
    int arr[] = {12, 11, 13, 5, 6, 7};
    int n = sizeof(arr) / sizeof(arr[0]);

    HeapSort heap(arr, n);
    cout << "Original array: ";
    heap.display();

    heap.sort();

    cout << "Sorted array: ";
    heap.display();

    return 0;
}
